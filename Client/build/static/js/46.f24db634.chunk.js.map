{"version":3,"sources":["views/inventorydata/inventorytable.js"],"names":["getBadge","status","Inventorytable","history","useHistory","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","inventoryData","setInventoryData","useEffect","Axios","get","then","response","data","xl","items","fields","key","_classes","hover","striped","itemsPerPage","activePage","clickableRows","onRowClick","item","push","item_id","scopedSlots","color","item_status","onActivePageChange","newPage","pages","doubleArrows","align"],"mappings":"iPAcMA,EAAW,SAAAC,GACf,OAAQA,GACN,IAAK,YAAa,MAAO,UACzB,IAAK,aAAc,MAAO,YAC1B,IAAK,WAAY,MAAO,UACxB,IAAK,cACL,IAAK,OACL,IAAK,OAAQ,MAAO,SACpB,QAAS,MAAO,YA2ELC,UAvEQ,WACrB,IAAMC,EAAUC,cACVC,EAAYC,cAAcC,OAAOC,MAAM,gBAAiB,IACxDC,EAAcC,OAAOL,GAAaA,EAAU,GAAKA,EAAU,GAAK,GACtE,EAAwBM,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAqBA,OAfAC,qBAAU,WACRP,IAAgBG,GAAQC,EAAQJ,KAC/B,CAACA,EAAaG,IAEjBI,qBAAU,WAKRC,IAAMC,IAAI,0BAA0BC,MAAK,SAACC,GACxCL,EAAiBK,EAASC,WAG3B,IAGD,cAAC,KAAD,UACE,cAAC,IAAD,CAAMC,GAAI,GAAV,SACE,eAAC,IAAD,WACE,cAAC,IAAD,gCAGA,eAAC,IAAD,WACA,cAAC,IAAD,CACEC,MAAOT,EACPU,OAAQ,CACN,CAAEC,IAAK,YAAaC,SAAU,oBAC9B,gBAAiB,gBAAiB,mBAAoB,eAExDC,OAAK,EACLC,SAAO,EACPC,aAAc,EACdC,WAAYlB,EACZmB,eAAa,EACbC,WAAY,SAACC,GAAD,OAAU9B,EAAQ+B,KAAR,yBAA+BD,EAAKE,WAC1DC,YAAe,CACb,OACE,SAACH,GAAD,OACE,6BACE,cAAC,IAAD,CAAQI,MAAOrC,EAASiC,EAAKK,aAA7B,SACGL,EAAKK,oBAMlB,cAAC,KAAD,CACER,WAAYlB,EACZ2B,mBApDS,SAAAC,GACjB/B,IAAgB+B,GAAWrC,EAAQ+B,KAAR,8BAAoCM,KAoDvDC,MAAO,EACPC,cAAc,EACdC,MAAM","file":"static/js/46.f24db634.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination\r\n} from '@coreui/react'\r\nimport Axios from 'axios'\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Available': return 'success'\r\n    case 'InShipping': return 'secondary'\r\n    case 'LowStock': return 'warning'\r\n    case 'Unavailable': return 'danger'\r\n    case 'null': return 'danger'\r\n    case 'NULL': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst Inventorytable = () => {\r\n  const history = useHistory()\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\r\n  const [page, setPage] = useState(currentPage)\r\n  const [inventoryData, setInventoryData] = useState([])\r\n\r\n  const pageChange = newPage => {\r\n    currentPage !== newPage && history.push(`/all-inventory?page=${newPage}`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    currentPage !== page && setPage(currentPage)\r\n  }, [currentPage, page])\r\n\r\n  useEffect(() => {\r\n    // Axios.get(\"https://ims-backend.herokuapp.com/api/get\").then((response) => {\r\n    //   setInventoryData(response.data)\r\n    // })\r\n\r\n    Axios.get(\"localhost:3001/api/get\").then((response) => {\r\n      setInventoryData(response.data)\r\n    })\r\n\r\n  }, [])\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xl={12}>\r\n        <CCard>\r\n          <CCardHeader>\r\n            Current Inventory\r\n          </CCardHeader>\r\n          <CCardBody>\r\n          <CDataTable\r\n            items={inventoryData}\r\n            fields={[\r\n              { key: 'item_name', _classes: 'font-weight-bold' },\r\n              'item_quantity', 'item_supplier', 'item_description', 'item_status'\r\n            ]}\r\n            hover\r\n            striped\r\n            itemsPerPage={8}\r\n            activePage={page}\r\n            clickableRows\r\n            onRowClick={(item) => history.push(`/inventorydata/${item.item_id}`)}\r\n            scopedSlots = {{\r\n              'status':\r\n                (item)=>(\r\n                  <td>\r\n                    <CBadge color={getBadge(item.item_status)}>\r\n                      {item.item_status}\r\n                    </CBadge>\r\n                  </td>\r\n                )\r\n            }}\r\n          />\r\n          <CPagination\r\n            activePage={page}\r\n            onActivePageChange={pageChange}\r\n            pages={1}\r\n            doubleArrows={false} \r\n            align=\"center\"\r\n          />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Inventorytable\r\n"],"sourceRoot":""}