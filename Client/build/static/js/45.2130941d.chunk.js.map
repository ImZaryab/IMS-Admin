{"version":3,"sources":["views/contracts/Contracts.js"],"names":["getBadge","status","Contracts","history","useHistory","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","contractsData","setContractsData","useEffect","Axios","get","then","response","data","contract_date","toString","split","xl","items","fields","key","_classes","hover","striped","itemsPerPage","activePage","clickableRows","onRowClick","item","push","contract_id","scopedSlots","color","contract_status","onActivePageChange","newPage","pages","doubleArrows","align"],"mappings":"yRAcMA,EAAW,SAACC,GAChB,OAAQA,GACN,IAAK,YACH,MAAO,UACT,IAAK,WACH,MAAO,YACT,IAAK,UACH,MAAO,UACT,IAAK,cAEL,IAAK,OAEL,IAAK,OACH,MAAO,SACT,QACE,MAAO,YAIE,SAASC,IACtB,IAAMC,EAAUC,cACVC,EAAYC,cAAcC,OAAOC,MAAM,gBAAiB,IACxDC,EAAcC,OAAOL,GAAaA,EAAU,GAAKA,EAAU,GAAK,GACtE,EAAwBM,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAiBA,OAXAC,qBAAU,WACRP,IAAgBG,GAAQC,EAAQJ,KAC/B,CAACA,EAAaG,IAEjBI,qBAAU,WACRC,IAAMC,IAAI,0CAA0CC,MAAK,SAACC,GACtDA,EAASC,KAAK,GAAGC,cAAgBF,EAASC,KAAK,GAAGC,cAAcC,WAAWC,MAAM,KAAK,GACtFT,EAAiBK,EAASC,WAE7B,IAGD,cAAC,KAAD,UACE,cAAC,IAAD,CAAMI,GAAI,GAAV,SACE,eAAC,IAAD,WACE,cAAC,IAAD,gCACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,MAAOZ,EACPa,OAAQ,CACN,CAAEC,IAAK,cAAeC,SAAU,oBAChC,aACA,gBACA,uBACA,mBAEFC,OAAK,EACLC,SAAO,EACPC,aAAc,EACdC,WAAYrB,EACZsB,eAAa,EACbC,WAAY,SAACC,GAAD,OACVjC,EAAQkC,KAAR,qBAA2BD,EAAKE,eAElCC,YAAa,CACX,gBAAmB,SAACH,GAAD,OACjB,6BACE,cAAC,IAAD,CAAQI,MAAOxC,EAASoC,EAAKK,iBAA7B,SACGL,EAAKK,wBAMhB,cAAC,KAAD,CACER,WAAYrB,EACZ8B,mBAlDO,SAACC,GAClBlC,IAAgBkC,GAAWxC,EAAQkC,KAAR,0BAAgCM,KAkDjDC,MAAO,EACPC,cAAc,EACdC,MAAM","file":"static/js/45.2130941d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CPagination,\r\n} from \"@coreui/react\";\r\nimport Axios from \"axios\";\r\n\r\nconst getBadge = (status) => {\r\n  switch (status) {\r\n    case \"Completed\":\r\n      return \"success\";\r\n    case \"Shipping\":\r\n      return \"secondary\";\r\n    case \"Pending\":\r\n      return \"warning\";\r\n    case \"Unavailable\":\r\n      return \"danger\";\r\n    case \"null\":\r\n      return \"danger\";\r\n    case \"NULL\":\r\n      return \"danger\";\r\n    default:\r\n      return \"primary\";\r\n  }\r\n};\r\n\r\nexport default function Contracts() {\r\n  const history = useHistory();\r\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, \"\");\r\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1);\r\n  const [page, setPage] = useState(currentPage);\r\n  const [contractsData, setContractsData] = useState([]);\r\n\r\n  const pageChange = (newPage) => {\r\n    currentPage !== newPage && history.push(`/contracts?page=${newPage}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    currentPage !== page && setPage(currentPage);\r\n  }, [currentPage, page]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/api/getcontracts\").then((response) => {\r\n        response.data[0].contract_date = response.data[0].contract_date.toString().split('T')[0]\r\n        setContractsData(response.data)\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <CRow>\r\n      <CCol xl={12}>\r\n        <CCard>\r\n          <CCardHeader>Current Contracts</CCardHeader>\r\n          <CCardBody>\r\n            <CDataTable\r\n              items={contractsData}\r\n              fields={[\r\n                { key: \"contract_id\", _classes: \"font-weight-bold\" },\r\n                \"contracter\",\r\n                \"contract_date\",\r\n                \"contract_description\",\r\n                \"contract_status\",\r\n              ]}\r\n              hover\r\n              striped\r\n              itemsPerPage={8}\r\n              activePage={page}\r\n              clickableRows\r\n              onRowClick={(item) =>\r\n                history.push(`/contracts/${item.contract_id}`)\r\n              }\r\n              scopedSlots={{\r\n                \"contract_status\": (item) => (\r\n                  <td>\r\n                    <CBadge color={getBadge(item.contract_status)}>\r\n                      {item.contract_status}\r\n                    </CBadge>\r\n                  </td>\r\n                ),\r\n              }}\r\n            />\r\n            <CPagination\r\n              activePage={page}\r\n              onActivePageChange={pageChange}\r\n              pages={1}\r\n              doubleArrows={false}\r\n              align=\"center\"\r\n            />\r\n          </CCardBody>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n}\r\n"],"sourceRoot":""}